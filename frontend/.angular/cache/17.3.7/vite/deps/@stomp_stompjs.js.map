{
  "version": 3,
  "sources": ["../../../../../node_modules/@stomp/stompjs/bundles/stomp.umd.js"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"StompJs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StompJs\"] = factory();\n\telse\n\t\troot[\"StompJs\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/byte.ts\":\n/*!*********************!*\\\n  !*** ./src/byte.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Some byte values, used as per STOMP specifications.\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexports.BYTE = {\n    // LINEFEED byte (octet 10)\n    LF: '\\x0A',\n    // NULL byte (octet 0)\n    NULL: '\\x00'\n};\n\n\n/***/ }),\n\n/***/ \"./src/client.ts\":\n/*!***********************!*\\\n  !*** ./src/client.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar stomp_handler_1 = __webpack_require__(/*! ./stomp-handler */ \"./src/stomp-handler.ts\");\nvar versions_1 = __webpack_require__(/*! ./versions */ \"./src/versions.ts\");\nvar web_socket_state_1 = __webpack_require__(/*! ./web-socket-state */ \"./src/web-socket-state.ts\");\n/**\n * STOMP Client Class.\n *\n * Part of `@stomp/stompjs`.\n */\nvar Client = /** @class */ (function () {\n    /**\n     * Create an instance.\n     */\n    function Client(conf) {\n        if (conf === void 0) { conf = {}; }\n        /**\n         * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n         *\n         * Example:\n         * ```javascript\n         *        // Try only versions 1.0 and 1.1\n         *        client.stompVersions = new Versions(['1.0', '1.1'])\n         * ```\n         */\n        this.stompVersions = versions_1.Versions.default;\n        /**\n         *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n         */\n        this.reconnectDelay = 5000;\n        /**\n         * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n         */\n        this.heartbeatIncoming = 10000;\n        /**\n         * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n         */\n        this.heartbeatOutgoing = 10000;\n        /**\n         * This switches on a non standard behavior while sending WebSocket packets.\n         * It splits larger (text) packets into chunks of [maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n         * Only Java Spring brokers seems to use this mode.\n         *\n         * WebSockets, by itself, split large (text) packets,\n         * so it is not needed with a truly compliant STOMP/WebSocket broker.\n         * Actually setting it for such broker will cause large messages to fail.\n         *\n         * `false` by default.\n         *\n         * Binary frames are never split.\n         */\n        this.splitLargeFrames = false;\n        /**\n         * See [splitLargeFrames]{@link Client#splitLargeFrames}.\n         * This has no effect if [splitLargeFrames]{@link Client#splitLargeFrames} is `false`.\n         */\n        this.maxWebSocketChunkSize = 8 * 1024;\n        /**\n         * Usually the\n         * [type of WebSocket frame]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send#Parameters}\n         * is automatically decided by type of the payload.\n         * Default is `false`, which should work with all compliant brokers.\n         *\n         * Set this flag to force binary frames.\n         */\n        this.forceBinaryWSFrames = false;\n        /**\n         * A bug in ReactNative chops a string on occurrence of a NULL.\n         * See issue [https://github.com/stomp-js/stompjs/issues/89]{@link https://github.com/stomp-js/stompjs/issues/89}.\n         * This makes incoming WebSocket messages invalid STOMP packets.\n         * Setting this flag attempts to reverse the damage by appending a NULL.\n         * If the broker splits a large message into multiple WebSocket messages,\n         * this flag will cause data loss and abnormal termination of connection.\n         *\n         * This is not an ideal solution, but a stop gap until the underlying issue is fixed at ReactNative library.\n         */\n        this.appendMissingNULLonIncoming = false;\n        this._active = false;\n        // Dummy callbacks\n        var noOp = function () { };\n        this.debug = noOp;\n        this.beforeConnect = noOp;\n        this.onConnect = noOp;\n        this.onDisconnect = noOp;\n        this.onUnhandledMessage = noOp;\n        this.onUnhandledReceipt = noOp;\n        this.onUnhandledFrame = noOp;\n        this.onStompError = noOp;\n        this.onWebSocketClose = noOp;\n        this.onWebSocketError = noOp;\n        this.logRawCommunication = false;\n        // These parameters would typically get proper values before connect is called\n        this.connectHeaders = {};\n        this._disconnectHeaders = {};\n        // Apply configuration\n        this.configure(conf);\n    }\n    Object.defineProperty(Client.prototype, \"webSocket\", {\n        /**\n         * Underlying WebSocket instance, READONLY.\n         */\n        get: function () {\n            return this._webSocket;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"disconnectHeaders\", {\n        /**\n         * Disconnection headers.\n         */\n        get: function () {\n            return this._disconnectHeaders;\n        },\n        set: function (value) {\n            this._disconnectHeaders = value;\n            if (this._stompHandler) {\n                this._stompHandler.disconnectHeaders = this._disconnectHeaders;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"connected\", {\n        /**\n         * `true` if there is a active connection with STOMP Broker\n         */\n        get: function () {\n            return (!!this._stompHandler) && this._stompHandler.connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"connectedVersion\", {\n        /**\n         * version of STOMP protocol negotiated with the server, READONLY\n         */\n        get: function () {\n            return this._stompHandler ? this._stompHandler.connectedVersion : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"active\", {\n        /**\n         * if the client is active (connected or going to reconnect)\n         */\n        get: function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Update configuration.\n     */\n    Client.prototype.configure = function (conf) {\n        // bulk assign all properties to this\n        Object.assign(this, conf);\n    };\n    /**\n     * Initiate the connection with the broker.\n     * If the connection breaks, as per [Client#reconnectDelay]{@link Client#reconnectDelay},\n     * it will keep trying to reconnect.\n     *\n     * Call [Client#deactivate]{@link Client#deactivate} to disconnect and stop reconnection attempts.\n     */\n    Client.prototype.activate = function () {\n        this._active = true;\n        this._connect();\n    };\n    Client.prototype._connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.connected) {\n                            this.debug('STOMP: already connected, nothing to do');\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.beforeConnect()];\n                    case 1:\n                        _a.sent();\n                        if (!this._active) {\n                            this.debug('Client has been marked inactive, will not attempt to connect');\n                            return [2 /*return*/];\n                        }\n                        this.debug('Opening Web Socket...');\n                        // Get the actual WebSocket (or a similar object)\n                        this._webSocket = this._createWebSocket();\n                        this._stompHandler = new stomp_handler_1.StompHandler(this, this._webSocket, {\n                            debug: this.debug,\n                            stompVersions: this.stompVersions,\n                            connectHeaders: this.connectHeaders,\n                            disconnectHeaders: this._disconnectHeaders,\n                            heartbeatIncoming: this.heartbeatIncoming,\n                            heartbeatOutgoing: this.heartbeatOutgoing,\n                            splitLargeFrames: this.splitLargeFrames,\n                            maxWebSocketChunkSize: this.maxWebSocketChunkSize,\n                            forceBinaryWSFrames: this.forceBinaryWSFrames,\n                            logRawCommunication: this.logRawCommunication,\n                            appendMissingNULLonIncoming: this.appendMissingNULLonIncoming,\n                            onConnect: function (frame) {\n                                if (!_this._active) {\n                                    _this.debug('STOMP got connected while deactivate was issued, will disconnect now');\n                                    _this._disposeStompHandler();\n                                    return;\n                                }\n                                _this.onConnect(frame);\n                            },\n                            onDisconnect: function (frame) {\n                                _this.onDisconnect(frame);\n                            },\n                            onStompError: function (frame) {\n                                _this.onStompError(frame);\n                            },\n                            onWebSocketClose: function (evt) {\n                                _this.onWebSocketClose(evt);\n                                // The callback is called before attempting to reconnect, this would allow the client\n                                // to be `deactivated` in the callback.\n                                if (_this._active) {\n                                    _this._schedule_reconnect();\n                                }\n                            },\n                            onWebSocketError: function (evt) {\n                                _this.onWebSocketError(evt);\n                            },\n                            onUnhandledMessage: function (message) {\n                                _this.onUnhandledMessage(message);\n                            },\n                            onUnhandledReceipt: function (frame) {\n                                _this.onUnhandledReceipt(frame);\n                            },\n                            onUnhandledFrame: function (frame) {\n                                _this.onUnhandledFrame(frame);\n                            }\n                        });\n                        this._stompHandler.start();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Client.prototype._createWebSocket = function () {\n        var webSocket;\n        if (this.webSocketFactory) {\n            webSocket = this.webSocketFactory();\n        }\n        else {\n            webSocket = new WebSocket(this.brokerURL, this.stompVersions.protocolVersions());\n        }\n        webSocket.binaryType = 'arraybuffer';\n        return webSocket;\n    };\n    Client.prototype._schedule_reconnect = function () {\n        var _this = this;\n        if (this.reconnectDelay > 0) {\n            this.debug(\"STOMP: scheduling reconnection in \" + this.reconnectDelay + \"ms\");\n            this._reconnector = setTimeout(function () {\n                _this._connect();\n            }, this.reconnectDelay);\n        }\n    };\n    /**\n     * Disconnect if connected and stop auto reconnect loop.\n     * Appropriate callbacks will be invoked if underlying STOMP connection was connected.\n     *\n     * To reactivate you can call [Client#activate]{@link Client#activate}.\n     */\n    Client.prototype.deactivate = function () {\n        // indicate that auto reconnect loop should terminate\n        this._active = false;\n        // Clear if a reconnection was scheduled\n        if (this._reconnector) {\n            clearTimeout(this._reconnector);\n        }\n        this._disposeStompHandler();\n    };\n    /**\n     * Force disconnect if there is an active connection by directly closing the underlying WebSocket.\n     * This is different than a normal disconnect where a DISCONNECT sequence is carried out with the broker.\n     * After forcing disconnect, automatic reconnect will be attempted.\n     * To stop further reconnects call [Client#deactivate]{@link Client#deactivate} as well.\n     */\n    Client.prototype.forceDisconnect = function () {\n        if (this._webSocket) {\n            if (this._webSocket.readyState === web_socket_state_1.WebSocketState.CONNECTING\n                || this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                this._stompHandler._closeWebsocket();\n            }\n        }\n    };\n    Client.prototype._disposeStompHandler = function () {\n        // Dispose STOMP Handler\n        if (this._stompHandler) {\n            this._stompHandler.dispose();\n            this._stompHandler = null;\n        }\n    };\n    /**\n     * Send a message to a named destination. Refer to your STOMP broker documentation for types\n     * and naming of destinations.\n     *\n     * STOMP protocol specifies and suggests some headers and also allows broker specific headers.\n     *\n     * `body` must be String.\n     * You will need to covert the payload to string in case it is not string (e.g. JSON).\n     *\n     * To send a binary message body use binaryBody parameter. It should be a\n     * [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array).\n     * Sometimes brokers may not support binary frames out of the box.\n     * Please check your broker documentation.\n     *\n     * `content-length` header is automatically added to the STOMP Frame sent to the broker.\n     * Set `skipContentLengthHeader` to indicate that `content-length` header should not be added.\n     * For binary messages `content-length` header is always added.\n     *\n     * Caution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\n     * and `content-length` header is missing.\n     *\n     * ```javascript\n     *        client.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n     *\n     *        // Only destination is mandatory parameter\n     *        client.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n     *\n     *        // Skip content-length header in the frame to the broker\n     *        client.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n     *\n     *        var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n     *        // setting content-type header is not mandatory, however a good practice\n     *        client.publish({destination: '/topic/special', binaryBody: binaryData,\n     *                         headers: {'content-type': 'application/octet-stream'}});\n     * ```\n     */\n    Client.prototype.publish = function (params) {\n        this._stompHandler.publish(params);\n    };\n    /**\n     * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n     * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n     * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n     * random number or a combination may be used.\n     *\n     * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n     * The operation needs to be matched based in the value of the receipt-id.\n     *\n     * This method allow watching for a receipt and invoke the callback\n     * when corresponding receipt has been received.\n     *\n     * The actual {@link FrameImpl} will be passed as parameter to the callback.\n     *\n     * Example:\n     * ```javascript\n     *        // Subscribing with acknowledgement\n     *        let receiptId = randomText();\n     *\n     *        client.watchForReceipt(receiptId, function() {\n     *          // Will be called after server acknowledges\n     *        });\n     *\n     *        client.subscribe(TEST.destination, onMessage, {receipt: receiptId});\n     *\n     *\n     *        // Publishing with acknowledgement\n     *        receiptId = randomText();\n     *\n     *        client.watchForReceipt(receiptId, function() {\n     *          // Will be called after server acknowledges\n     *        });\n     *        client.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n     * ```\n     */\n    Client.prototype.watchForReceipt = function (receiptId, callback) {\n        this._stompHandler.watchForReceipt(receiptId, callback);\n    };\n    /**\n     * Subscribe to a STOMP Broker location. The callback will be invoked for each received message with\n     * the {@link IMessage} as argument.\n     *\n     * Note: The library will generate an unique ID if there is none provided in the headers.\n     *       To use your own ID, pass it using the headers argument.\n     *\n     * ```javascript\n     *        callback = function(message) {\n     *        // called when the client receives a STOMP message from the server\n     *          if (message.body) {\n     *            alert(\"got message with body \" + message.body)\n     *          } else {\n     *            alert(\"got empty message\");\n     *          }\n     *        });\n     *\n     *        var subscription = client.subscribe(\"/queue/test\", callback);\n     *\n     *        // Explicit subscription id\n     *        var mySubId = 'my-subscription-id-001';\n     *        var subscription = client.subscribe(destination, callback, { id: mySubId });\n     * ```\n     */\n    Client.prototype.subscribe = function (destination, callback, headers) {\n        if (headers === void 0) { headers = {}; }\n        return this._stompHandler.subscribe(destination, callback, headers);\n    };\n    /**\n     * It is preferable to unsubscribe from a subscription by calling\n     * `unsubscribe()` directly on {@link StompSubscription} returned by `client.subscribe()`:\n     *\n     * ```javascript\n     *        var subscription = client.subscribe(destination, onmessage);\n     *        // ...\n     *        subscription.unsubscribe();\n     * ```\n     *\n     * See: http://stomp.github.com/stomp-specification-1.2.html#UNSUBSCRIBE UNSUBSCRIBE Frame\n     */\n    Client.prototype.unsubscribe = function (id, headers) {\n        if (headers === void 0) { headers = {}; }\n        this._stompHandler.unsubscribe(id, headers);\n    };\n    /**\n     * Start a transaction, the returned {@link ITransaction} has methods - [commit]{@link ITransaction#commit}\n     * and [abort]{@link ITransaction#abort}.\n     *\n     * `transactionId` is optional, if not passed the library will generate it internally.\n     */\n    Client.prototype.begin = function (transactionId) {\n        return this._stompHandler.begin(transactionId);\n    };\n    /**\n     * Commit a transaction.\n     *\n     * It is preferable to commit a transaction by calling [commit]{@link ITransaction#commit} directly on\n     * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n     *\n     * ```javascript\n     *        var tx = client.begin(txId);\n     *        //...\n     *        tx.commit();\n     * ```\n     */\n    Client.prototype.commit = function (transactionId) {\n        this._stompHandler.commit(transactionId);\n    };\n    /**\n     * Abort a transaction.\n     * It is preferable to abort a transaction by calling [abort]{@link ITransaction#abort} directly on\n     * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n     *\n     * ```javascript\n     *        var tx = client.begin(txId);\n     *        //...\n     *        tx.abort();\n     * ```\n     */\n    Client.prototype.abort = function (transactionId) {\n        this._stompHandler.abort(transactionId);\n    };\n    /**\n     * ACK a message. It is preferable to acknowledge a message by calling [ack]{@link IMessage#ack} directly\n     * on the {@link IMessage} handled by a subscription callback:\n     *\n     * ```javascript\n     *        var callback = function (message) {\n     *          // process the message\n     *          // acknowledge it\n     *          message.ack();\n     *        };\n     *        client.subscribe(destination, callback, {'ack': 'client'});\n     * ```\n     */\n    Client.prototype.ack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        this._stompHandler.ack(messageId, subscriptionId, headers);\n    };\n    /**\n     * NACK a message. It is preferable to acknowledge a message by calling [nack]{@link IMessage#nack} directly\n     * on the {@link IMessage} handled by a subscription callback:\n     *\n     * ```javascript\n     *        var callback = function (message) {\n     *          // process the message\n     *          // an error occurs, nack it\n     *          message.nack();\n     *        };\n     *        client.subscribe(destination, callback, {'ack': 'client'});\n     * ```\n     */\n    Client.prototype.nack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        this._stompHandler.nack(messageId, subscriptionId, headers);\n    };\n    return Client;\n}());\nexports.Client = Client;\n\n\n/***/ }),\n\n/***/ \"./src/compatibility/compat-client.ts\":\n/*!********************************************!*\\\n  !*** ./src/compatibility/compat-client.ts ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_1 = __webpack_require__(/*! ../client */ \"./src/client.ts\");\nvar heartbeat_info_1 = __webpack_require__(/*! ./heartbeat-info */ \"./src/compatibility/heartbeat-info.ts\");\n/**\n * Available for backward compatibility, please shift to using {@link Client}.\n *\n * **Deprecated**\n *\n * Part of `@stomp/stompjs`.\n *\n * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n */\nvar CompatClient = /** @class */ (function (_super) {\n    __extends(CompatClient, _super);\n    /**\n     * Available for backward compatibility, please shift to using {@link Client}\n     * and [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     *\n     * **Deprecated**\n     *\n     * @internal\n     */\n    function CompatClient(webSocketFactory) {\n        var _this = _super.call(this) || this;\n        /**\n         * It is no op now. No longer needed. Large packets work out of the box.\n         */\n        _this.maxWebSocketFrameSize = 16 * 1024;\n        _this._heartbeatInfo = new heartbeat_info_1.HeartbeatInfo(_this);\n        _this.reconnect_delay = 0;\n        _this.webSocketFactory = webSocketFactory;\n        // Default from previous version\n        _this.debug = function () {\n            var message = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                message[_i] = arguments[_i];\n            }\n            console.log.apply(console, message);\n        };\n        return _this;\n    }\n    CompatClient.prototype._parseConnect = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var closeEventCallback;\n        var connectCallback;\n        var errorCallback;\n        var headers = {};\n        if (args.length < 2) {\n            throw new Error(('Connect requires at least 2 arguments'));\n        }\n        if (typeof (args[1]) === 'function') {\n            headers = args[0], connectCallback = args[1], errorCallback = args[2], closeEventCallback = args[3];\n        }\n        else {\n            switch (args.length) {\n                case 6:\n                    headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], closeEventCallback = args[4], headers.host = args[5];\n                    break;\n                default:\n                    headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], closeEventCallback = args[4];\n            }\n        }\n        return [headers, connectCallback, errorCallback, closeEventCallback];\n    };\n    /**\n     * Available for backward compatibility, please shift to using [Client#activate]{@link Client#activate}.\n     *\n     * **Deprecated**\n     *\n     * The `connect` method accepts different number of arguments and types. See the Overloads list. Use the\n     * version with headers to pass your broker specific options.\n     *\n     * overloads:\n     * - connect(headers, connectCallback)\n     * - connect(headers, connectCallback, errorCallback)\n     * - connect(login, passcode, connectCallback)\n     * - connect(login, passcode, connectCallback, errorCallback)\n     * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback)\n     * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback, host)\n     *\n     * params:\n     * - headers, see [Client#connectHeaders]{@link Client#connectHeaders}\n     * - connectCallback, see [Client#onConnect]{@link Client#onConnect}\n     * - errorCallback, see [Client#onStompError]{@link Client#onStompError}\n     * - closeEventCallback, see [Client#onWebSocketClose]{@link Client#onWebSocketClose}\n     * - login [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n     * - passcode [String], [Client#connectHeaders](../classes/Client.html#connectHeaders)\n     * - host [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n     *\n     * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n     */\n    CompatClient.prototype.connect = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var out = this._parseConnect.apply(this, args);\n        if (out[0]) {\n            this.connectHeaders = out[0];\n        }\n        if (out[1]) {\n            this.onConnect = out[1];\n        }\n        if (out[2]) {\n            this.onStompError = out[2];\n        }\n        if (out[3]) {\n            this.onWebSocketClose = out[3];\n        }\n        _super.prototype.activate.call(this);\n    };\n    /**\n     * Available for backward compatibility, please shift to using [Client#deactivate]{@link Client#deactivate}.\n     *\n     * **Deprecated**\n     *\n     * See:\n     * [Client#onDisconnect]{@link Client#onDisconnect}, and\n     * [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n     *\n     * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n     */\n    CompatClient.prototype.disconnect = function (disconnectCallback, headers) {\n        if (headers === void 0) { headers = {}; }\n        if (disconnectCallback) {\n            this.onDisconnect = disconnectCallback;\n        }\n        this.disconnectHeaders = headers;\n        _super.prototype.deactivate.call(this);\n    };\n    /**\n     * Available for backward compatibility, use [Client#publish]{@link Client#publish}.\n     *\n     * Send a message to a named destination. Refer to your STOMP broker documentation for types\n     * and naming of destinations. The headers will, typically, be available to the subscriber.\n     * However, there may be special purpose headers corresponding to your STOMP broker.\n     *\n     *  **Deprecated**, use [Client#publish]{@link Client#publish}\n     *\n     * Note: Body must be String. You will need to covert the payload to string in case it is not string (e.g. JSON)\n     *\n     * ```javascript\n     *        client.send(\"/queue/test\", {priority: 9}, \"Hello, STOMP\");\n     *\n     *        // If you want to send a message with a body, you must also pass the headers argument.\n     *        client.send(\"/queue/test\", {}, \"Hello, STOMP\");\n     * ```\n     *\n     * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n     */\n    CompatClient.prototype.send = function (destination, headers, body) {\n        if (headers === void 0) { headers = {}; }\n        if (body === void 0) { body = ''; }\n        headers = Object.assign({}, headers);\n        var skipContentLengthHeader = (headers['content-length'] === false);\n        if (skipContentLengthHeader) {\n            delete headers['content-length'];\n        }\n        this.publish({\n            destination: destination,\n            headers: headers,\n            body: body,\n            skipContentLengthHeader: skipContentLengthHeader\n        });\n    };\n    Object.defineProperty(CompatClient.prototype, \"reconnect_delay\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#reconnectDelay]{@link Client#reconnectDelay}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.reconnectDelay = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"ws\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#webSocket]{@link Client#webSocket}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this._webSocket;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"version\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#connectedVersion]{@link Client#connectedVersion}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this.connectedVersion;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"onreceive\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this.onUnhandledMessage;\n        },\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.onUnhandledMessage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"onreceipt\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n         * Prefer using [Client#watchForReceipt]{@link Client#watchForReceipt}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this.onUnhandledReceipt;\n        },\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.onUnhandledReceipt = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"heartbeat\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n         * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this._heartbeatInfo;\n        },\n        /**\n         * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n         * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.heartbeatIncoming = value.incoming;\n            this.heartbeatOutgoing = value.outgoing;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CompatClient;\n}(client_1.Client));\nexports.CompatClient = CompatClient;\n\n\n/***/ }),\n\n/***/ \"./src/compatibility/heartbeat-info.ts\":\n/*!*********************************************!*\\\n  !*** ./src/compatibility/heartbeat-info.ts ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nvar HeartbeatInfo = /** @class */ (function () {\n    function HeartbeatInfo(client) {\n        this.client = client;\n    }\n    Object.defineProperty(HeartbeatInfo.prototype, \"outgoing\", {\n        get: function () {\n            return this.client.heartbeatOutgoing;\n        },\n        set: function (value) {\n            this.client.heartbeatOutgoing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HeartbeatInfo.prototype, \"incoming\", {\n        get: function () {\n            return this.client.heartbeatIncoming;\n        },\n        set: function (value) {\n            this.client.heartbeatIncoming = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HeartbeatInfo;\n}());\nexports.HeartbeatInfo = HeartbeatInfo;\n\n\n/***/ }),\n\n/***/ \"./src/compatibility/stomp.ts\":\n/*!************************************!*\\\n  !*** ./src/compatibility/stomp.ts ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar versions_1 = __webpack_require__(/*! ../versions */ \"./src/versions.ts\");\nvar compat_client_1 = __webpack_require__(/*! ./compat-client */ \"./src/compatibility/compat-client.ts\");\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nvar Stomp = /** @class */ (function () {\n    function Stomp() {\n    }\n    /**\n     * This method creates a WebSocket client that is connected to\n     * the STOMP server located at the url.\n     *\n     * ```javascript\n     *        var url = \"ws://localhost:61614/stomp\";\n     *        var client = Stomp.client(url);\n     * ```\n     *\n     * **Deprecated**\n     *\n     * It will be removed in next major version. Please switch to {@link Client}\n     * using [Client#brokerURL]{@link Client#brokerURL}.\n     */\n    Stomp.client = function (url, protocols) {\n        // This is a hack to allow another implementation than the standard\n        // HTML5 WebSocket class.\n        //\n        // It is possible to use another class by calling\n        //\n        //     Stomp.WebSocketClass = MozWebSocket\n        //\n        // *prior* to call `Stomp.client()`.\n        //\n        // This hack is deprecated and `Stomp.over()` method should be used\n        // instead.\n        // See remarks on the function Stomp.over\n        if (protocols == null) {\n            protocols = versions_1.Versions.default.protocolVersions();\n        }\n        var wsFn = function () {\n            var klass = Stomp.WebSocketClass || WebSocket;\n            return new klass(url, protocols);\n        };\n        return new compat_client_1.CompatClient(wsFn);\n    };\n    /**\n     * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n     * specify the WebSocket to use (either a standard HTML5 WebSocket or\n     * a similar object).\n     *\n     * In order to support reconnection, the function Client._connect should be callable more than once.\n     * While reconnecting\n     * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n     * alternatively allows passing a function that should return a new instance of the underlying socket.\n     *\n     * ```javascript\n     *        var client = Stomp.over(function(){\n     *          return new WebSocket('ws://localhost:15674/ws')\n     *        });\n     * ```\n     *\n     * **Deprecated**\n     *\n     * It will be removed in next major version. Please switch to {@link Client}\n     * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     */\n    Stomp.over = function (ws) {\n        var wsFn;\n        if (typeof (ws) === 'function') {\n            wsFn = ws;\n        }\n        else {\n            console.warn('Stomp.over did not receive a factory, auto reconnect will not work. ' +\n                'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over');\n            wsFn = function () { return ws; };\n        }\n        return new compat_client_1.CompatClient(wsFn);\n    };\n    /**\n     * In case you need to use a non standard class for WebSocket.\n     *\n     * For example when using within NodeJS environment:\n     *\n     * ```javascript\n     *        StompJs = require('../../esm5/');\n     *        Stomp = StompJs.Stomp;\n     *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n     * ```\n     *\n     * **Deprecated**\n     *\n     *\n     * It will be removed in next major version. Please switch to {@link Client}\n     * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     */\n    // tslint:disable-next-line:variable-name\n    Stomp.WebSocketClass = null;\n    return Stomp;\n}());\nexports.Stomp = Stomp;\n\n\n/***/ }),\n\n/***/ \"./src/frame-impl.ts\":\n/*!***************************!*\\\n  !*** ./src/frame-impl.ts ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar byte_1 = __webpack_require__(/*! ./byte */ \"./src/byte.ts\");\n/**\n * Frame class represents a STOMP frame.\n *\n * @internal\n */\nvar FrameImpl = /** @class */ (function () {\n    /**\n     * Frame constructor. `command`, `headers` and `body` are available as properties.\n     *\n     * @internal\n     */\n    function FrameImpl(params) {\n        var command = params.command, headers = params.headers, body = params.body, binaryBody = params.binaryBody, escapeHeaderValues = params.escapeHeaderValues, skipContentLengthHeader = params.skipContentLengthHeader;\n        this.command = command;\n        this.headers = Object.assign({}, headers || {});\n        if (binaryBody) {\n            this._binaryBody = binaryBody;\n            this.isBinaryBody = true;\n        }\n        else {\n            this._body = body || '';\n            this.isBinaryBody = false;\n        }\n        this.escapeHeaderValues = escapeHeaderValues || false;\n        this.skipContentLengthHeader = skipContentLengthHeader || false;\n    }\n    Object.defineProperty(FrameImpl.prototype, \"body\", {\n        /**\n         * body of the frame\n         */\n        get: function () {\n            if (!this._body && this.isBinaryBody) {\n                this._body = new TextDecoder().decode(this._binaryBody);\n            }\n            return this._body;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FrameImpl.prototype, \"binaryBody\", {\n        /**\n         * body as Uint8Array\n         */\n        get: function () {\n            if (!this._binaryBody && !this.isBinaryBody) {\n                this._binaryBody = new TextEncoder().encode(this._body);\n            }\n            return this._binaryBody;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * deserialize a STOMP Frame from raw data.\n     *\n     * @internal\n     */\n    FrameImpl.fromRawFrame = function (rawFrame, escapeHeaderValues) {\n        var headers = {};\n        var trim = function (str) { return str.replace(/^\\s+|\\s+$/g, ''); };\n        // In case of repeated headers, as per standards, first value need to be used\n        for (var _i = 0, _a = rawFrame.headers.reverse(); _i < _a.length; _i++) {\n            var header = _a[_i];\n            var idx = header.indexOf(':');\n            var key = trim(header[0]);\n            var value = trim(header[1]);\n            if (escapeHeaderValues && (rawFrame.command !== 'CONNECT') && (rawFrame.command !== 'CONNECTED')) {\n                value = FrameImpl.hdrValueUnEscape(value);\n            }\n            headers[key] = value;\n        }\n        return new FrameImpl({\n            command: rawFrame.command,\n            headers: headers,\n            binaryBody: rawFrame.binaryBody,\n            escapeHeaderValues: escapeHeaderValues\n        });\n    };\n    /**\n     * @internal\n     */\n    FrameImpl.prototype.toString = function () {\n        return this.serializeCmdAndHeaders();\n    };\n    /**\n     * serialize this Frame in a format suitable to be passed to WebSocket.\n     * If the body is string the output will be string.\n     * If the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n     *\n     * @internal\n     */\n    FrameImpl.prototype.serialize = function () {\n        var cmdAndHeaders = this.serializeCmdAndHeaders();\n        if (this.isBinaryBody) {\n            return FrameImpl.toUnit8Array(cmdAndHeaders, this._binaryBody).buffer;\n        }\n        else {\n            return cmdAndHeaders + this._body + byte_1.BYTE.NULL;\n        }\n    };\n    FrameImpl.prototype.serializeCmdAndHeaders = function () {\n        var lines = [this.command];\n        if (this.skipContentLengthHeader) {\n            delete this.headers['content-length'];\n        }\n        for (var _i = 0, _a = Object.keys(this.headers || {}); _i < _a.length; _i++) {\n            var name_1 = _a[_i];\n            var value = this.headers[name_1];\n            if (this.escapeHeaderValues && (this.command !== 'CONNECT') && (this.command !== 'CONNECTED')) {\n                lines.push(name_1 + \":\" + FrameImpl.hdrValueEscape(\"\" + value));\n            }\n            else {\n                lines.push(name_1 + \":\" + value);\n            }\n        }\n        if (this.isBinaryBody || (!this.isBodyEmpty() && !this.skipContentLengthHeader)) {\n            lines.push(\"content-length:\" + this.bodyLength());\n        }\n        return lines.join(byte_1.BYTE.LF) + byte_1.BYTE.LF + byte_1.BYTE.LF;\n    };\n    FrameImpl.prototype.isBodyEmpty = function () {\n        return this.bodyLength() === 0;\n    };\n    FrameImpl.prototype.bodyLength = function () {\n        var binaryBody = this.binaryBody;\n        return binaryBody ? binaryBody.length : 0;\n    };\n    /**\n     * Compute the size of a UTF-8 string by counting its number of bytes\n     * (and not the number of characters composing the string)\n     */\n    FrameImpl.sizeOfUTF8 = function (s) {\n        return s ? new TextEncoder().encode(s).length : 0;\n    };\n    FrameImpl.toUnit8Array = function (cmdAndHeaders, binaryBody) {\n        var uint8CmdAndHeaders = new TextEncoder().encode(cmdAndHeaders);\n        var nullTerminator = new Uint8Array([0]);\n        var uint8Frame = new Uint8Array(uint8CmdAndHeaders.length + binaryBody.length + nullTerminator.length);\n        uint8Frame.set(uint8CmdAndHeaders);\n        uint8Frame.set(binaryBody, uint8CmdAndHeaders.length);\n        uint8Frame.set(nullTerminator, uint8CmdAndHeaders.length + binaryBody.length);\n        return uint8Frame;\n    };\n    /**\n     * Serialize a STOMP frame as per STOMP standards, suitable to be sent to the STOMP broker.\n     *\n     * @internal\n     */\n    FrameImpl.marshall = function (params) {\n        var frame = new FrameImpl(params);\n        return frame.serialize();\n    };\n    /**\n     *  Escape header values\n     */\n    FrameImpl.hdrValueEscape = function (str) {\n        return str.replace(/\\\\/g, '\\\\\\\\').replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/:/g, '\\\\c');\n    };\n    /**\n     * UnEscape header values\n     */\n    FrameImpl.hdrValueUnEscape = function (str) {\n        return str.replace(/\\\\r/g, '\\r').replace(/\\\\n/g, '\\n').replace(/\\\\c/g, ':').replace(/\\\\\\\\/g, '\\\\');\n    };\n    return FrameImpl;\n}());\nexports.FrameImpl = FrameImpl;\n\n\n/***/ }),\n\n/***/ \"./src/index.ts\":\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./client */ \"./src/client.ts\"));\n__export(__webpack_require__(/*! ./frame-impl */ \"./src/frame-impl.ts\"));\n__export(__webpack_require__(/*! ./parser */ \"./src/parser.ts\"));\n__export(__webpack_require__(/*! ./stomp-config */ \"./src/stomp-config.ts\"));\n__export(__webpack_require__(/*! ./stomp-headers */ \"./src/stomp-headers.ts\"));\n__export(__webpack_require__(/*! ./stomp-subscription */ \"./src/stomp-subscription.ts\"));\n__export(__webpack_require__(/*! ./versions */ \"./src/versions.ts\"));\n__export(__webpack_require__(/*! ./web-socket-state */ \"./src/web-socket-state.ts\"));\n// Compatibility code\n__export(__webpack_require__(/*! ./compatibility/compat-client */ \"./src/compatibility/compat-client.ts\"));\n__export(__webpack_require__(/*! ./compatibility/stomp */ \"./src/compatibility/stomp.ts\"));\n\n\n/***/ }),\n\n/***/ \"./src/parser.ts\":\n/*!***********************!*\\\n  !*** ./src/parser.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internal\n */\nvar NULL = 0;\n/**\n * @internal\n */\nvar LF = 10;\n/**\n * @internal\n */\nvar CR = 13;\n/**\n * @internal\n */\nvar COLON = 58;\n/**\n * This is an evented, rec descent parser.\n * A stream of Octets can be passed and whenever it recognizes\n * a complete Frame or an incoming ping it will invoke the registered callbacks.\n *\n * All incoming Octets are fed into _onByte function.\n * Depending on current state the _onByte function keeps changing.\n * Depending on the state it keeps accumulating into _token and _results.\n * State is indicated by current value of _onByte, all states are named as _collect.\n *\n * STOMP standards https://stomp.github.io/stomp-specification-1.2.html\n * imply that all lengths are considered in bytes (instead of string lengths).\n * So, before actual parsing, if the incoming data is String it is converted to Octets.\n * This allows faithful implementation of the protocol and allows NULL Octets to be present in the body.\n *\n * There is no peek function on the incoming data.\n * When a state change occurs based on an Octet without consuming the Octet,\n * the Octet, after state change, is fed again (_reinjectByte).\n * This became possible as the state change can be determined by inspecting just one Octet.\n *\n * There are two modes to collect the body, if content-length header is there then it by counting Octets\n * otherwise it is determined by NULL terminator.\n *\n * Following the standards, the command and headers are converted to Strings\n * and the body is returned as Octets.\n * Headers are returned as an array and not as Hash - to allow multiple occurrence of an header.\n *\n * This parser does not use Regular Expressions as that can only operate on Strings.\n *\n * It handles if multiple STOMP frames are given as one chunk, a frame is split into multiple chunks, or\n * any combination there of. The parser remembers its state (any partial frame) and continues when a new chunk\n * is pushed.\n *\n * Typically the higher level function will convert headers to Hash, handle unescaping of header values\n * (which is protocol version specific), and convert body to text.\n *\n * Check the parser.spec.js to understand cases that this parser is supposed to handle.\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nvar Parser = /** @class */ (function () {\n    function Parser(onFrame, onIncomingPing) {\n        this.onFrame = onFrame;\n        this.onIncomingPing = onIncomingPing;\n        this._encoder = new TextEncoder();\n        this._decoder = new TextDecoder();\n        this._token = [];\n        this._initState();\n    }\n    Parser.prototype.parseChunk = function (segment, appendMissingNULLonIncoming) {\n        if (appendMissingNULLonIncoming === void 0) { appendMissingNULLonIncoming = false; }\n        var chunk;\n        if ((segment instanceof ArrayBuffer)) {\n            chunk = new Uint8Array(segment);\n        }\n        else {\n            chunk = this._encoder.encode(segment);\n        }\n        // See https://github.com/stomp-js/stompjs/issues/89\n        // Remove when underlying issue is fixed.\n        //\n        // Send a NULL byte, if the last byte of a Text frame was not NULL.F\n        if (appendMissingNULLonIncoming && chunk[chunk.length - 1] !== 0) {\n            var chunkWithNull = new Uint8Array(chunk.length + 1);\n            chunkWithNull.set(chunk, 0);\n            chunkWithNull[chunk.length] = 0;\n            chunk = chunkWithNull;\n        }\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < chunk.length; i++) {\n            var byte = chunk[i];\n            this._onByte(byte);\n        }\n    };\n    // The following implements a simple Rec Descent Parser.\n    // The grammar is simple and just one byte tells what should be the next state\n    Parser.prototype._collectFrame = function (byte) {\n        if (byte === NULL) { // Ignore\n            return;\n        }\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) { // Incoming Ping\n            this.onIncomingPing();\n            return;\n        }\n        this._onByte = this._collectCommand;\n        this._reinjectByte(byte);\n    };\n    Parser.prototype._collectCommand = function (byte) {\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) {\n            this._results.command = this._consumeTokenAsUTF8();\n            this._onByte = this._collectHeaders;\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._collectHeaders = function (byte) {\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) {\n            this._setupCollectBody();\n            return;\n        }\n        this._onByte = this._collectHeaderKey;\n        this._reinjectByte(byte);\n    };\n    Parser.prototype._reinjectByte = function (byte) {\n        this._onByte(byte);\n    };\n    Parser.prototype._collectHeaderKey = function (byte) {\n        if (byte === COLON) {\n            this._headerKey = this._consumeTokenAsUTF8();\n            this._onByte = this._collectHeaderValue;\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._collectHeaderValue = function (byte) {\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) {\n            this._results.headers.push([this._headerKey, this._consumeTokenAsUTF8()]);\n            this._headerKey = undefined;\n            this._onByte = this._collectHeaders;\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._setupCollectBody = function () {\n        var contentLengthHeader = this._results.headers.filter(function (header) {\n            return header[0] === 'content-length';\n        })[0];\n        if (contentLengthHeader) {\n            this._bodyBytesRemaining = parseInt(contentLengthHeader[1], 10);\n            this._onByte = this._collectBodyFixedSize;\n        }\n        else {\n            this._onByte = this._collectBodyNullTerminated;\n        }\n    };\n    Parser.prototype._collectBodyNullTerminated = function (byte) {\n        if (byte === NULL) {\n            this._retrievedBody();\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._collectBodyFixedSize = function (byte) {\n        // It is post decrement, so that we discard the trailing NULL octet\n        if (this._bodyBytesRemaining-- === 0) {\n            this._retrievedBody();\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._retrievedBody = function () {\n        this._results.binaryBody = this._consumeTokenAsRaw();\n        this.onFrame(this._results);\n        this._initState();\n    };\n    // Rec Descent Parser helpers\n    Parser.prototype._consumeByte = function (byte) {\n        this._token.push(byte);\n    };\n    Parser.prototype._consumeTokenAsUTF8 = function () {\n        return this._decoder.decode(this._consumeTokenAsRaw());\n    };\n    Parser.prototype._consumeTokenAsRaw = function () {\n        var rawResult = new Uint8Array(this._token);\n        this._token = [];\n        return rawResult;\n    };\n    Parser.prototype._initState = function () {\n        this._results = {\n            command: undefined,\n            headers: [],\n            binaryBody: undefined\n        };\n        this._token = [];\n        this._headerKey = undefined;\n        this._onByte = this._collectFrame;\n    };\n    return Parser;\n}());\nexports.Parser = Parser;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-config.ts\":\n/*!*****************************!*\\\n  !*** ./src/stomp-config.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * Part of `@stomp/stompjs`.\n */\nvar StompConfig = /** @class */ (function () {\n    function StompConfig() {\n    }\n    return StompConfig;\n}());\nexports.StompConfig = StompConfig;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-handler.ts\":\n/*!******************************!*\\\n  !*** ./src/stomp-handler.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar byte_1 = __webpack_require__(/*! ./byte */ \"./src/byte.ts\");\nvar frame_impl_1 = __webpack_require__(/*! ./frame-impl */ \"./src/frame-impl.ts\");\nvar parser_1 = __webpack_require__(/*! ./parser */ \"./src/parser.ts\");\nvar versions_1 = __webpack_require__(/*! ./versions */ \"./src/versions.ts\");\nvar web_socket_state_1 = __webpack_require__(/*! ./web-socket-state */ \"./src/web-socket-state.ts\");\n/**\n * The STOMP protocol handler\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nvar StompHandler = /** @class */ (function () {\n    function StompHandler(_client, _webSocket, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        this._client = _client;\n        this._webSocket = _webSocket;\n        this._serverFrameHandlers = {\n            // [CONNECTED Frame](http://stomp.github.com/stomp-specification-1.2.html#CONNECTED_Frame)\n            CONNECTED: function (frame) {\n                _this.debug(\"connected to server \" + frame.headers.server);\n                _this._connected = true;\n                _this._connectedVersion = frame.headers.version;\n                // STOMP version 1.2 needs header values to be escaped\n                if (_this._connectedVersion === versions_1.Versions.V1_2) {\n                    _this._escapeHeaderValues = true;\n                }\n                _this._setupHeartbeat(frame.headers);\n                _this.onConnect(frame);\n            },\n            // [MESSAGE Frame](http://stomp.github.com/stomp-specification-1.2.html#MESSAGE)\n            MESSAGE: function (frame) {\n                // the callback is registered when the client calls\n                // `subscribe()`.\n                // If there is no registered subscription for the received message,\n                // the default `onUnhandledMessage` callback is used that the client can set.\n                // This is useful for subscriptions that are automatically created\n                // on the browser side (e.g. [RabbitMQ's temporary\n                // queues](http://www.rabbitmq.com/stomp.html)).\n                var subscription = frame.headers.subscription;\n                var onReceive = _this._subscriptions[subscription] || _this.onUnhandledMessage;\n                // bless the frame to be a Message\n                var message = frame;\n                var client = _this;\n                var messageId = _this._connectedVersion === versions_1.Versions.V1_2 ? message.headers.ack : message.headers['message-id'];\n                // add `ack()` and `nack()` methods directly to the returned frame\n                // so that a simple call to `message.ack()` can acknowledge the message.\n                message.ack = function (headers) {\n                    if (headers === void 0) { headers = {}; }\n                    return client.ack(messageId, subscription, headers);\n                };\n                message.nack = function (headers) {\n                    if (headers === void 0) { headers = {}; }\n                    return client.nack(messageId, subscription, headers);\n                };\n                onReceive(message);\n            },\n            // [RECEIPT Frame](http://stomp.github.com/stomp-specification-1.2.html#RECEIPT)\n            RECEIPT: function (frame) {\n                var callback = _this._receiptWatchers[frame.headers['receipt-id']];\n                if (callback) {\n                    callback(frame);\n                    // Server will acknowledge only once, remove the callback\n                    delete _this._receiptWatchers[frame.headers['receipt-id']];\n                }\n                else {\n                    _this.onUnhandledReceipt(frame);\n                }\n            },\n            // [ERROR Frame](http://stomp.github.com/stomp-specification-1.2.html#ERROR)\n            ERROR: function (frame) {\n                _this.onStompError(frame);\n            }\n        };\n        // used to index subscribers\n        this._counter = 0;\n        // subscription callbacks indexed by subscriber's ID\n        this._subscriptions = {};\n        // receipt-watchers indexed by receipts-ids\n        this._receiptWatchers = {};\n        this._partialData = '';\n        this._escapeHeaderValues = false;\n        this._lastServerActivityTS = Date.now();\n        this.configure(config);\n    }\n    Object.defineProperty(StompHandler.prototype, \"connectedVersion\", {\n        get: function () {\n            return this._connectedVersion;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StompHandler.prototype, \"connected\", {\n        get: function () {\n            return this._connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StompHandler.prototype.configure = function (conf) {\n        // bulk assign all properties to this\n        Object.assign(this, conf);\n    };\n    StompHandler.prototype.start = function () {\n        var _this = this;\n        var parser = new parser_1.Parser(\n        // On Frame\n        function (rawFrame) {\n            var frame = frame_impl_1.FrameImpl.fromRawFrame(rawFrame, _this._escapeHeaderValues);\n            // if this.logRawCommunication is set, the rawChunk is logged at this._webSocket.onmessage\n            if (!_this.logRawCommunication) {\n                _this.debug(\"<<< \" + frame);\n            }\n            var serverFrameHandler = _this._serverFrameHandlers[frame.command] || _this.onUnhandledFrame;\n            serverFrameHandler(frame);\n        }, \n        // On Incoming Ping\n        function () {\n            _this.debug('<<< PONG');\n        });\n        this._webSocket.onmessage = function (evt) {\n            _this.debug('Received data');\n            _this._lastServerActivityTS = Date.now();\n            if (_this.logRawCommunication) {\n                var rawChunkAsString = (evt.data instanceof ArrayBuffer) ? new TextDecoder().decode(evt.data) : evt.data;\n                _this.debug(\"<<< \" + rawChunkAsString);\n            }\n            parser.parseChunk(evt.data, _this.appendMissingNULLonIncoming);\n        };\n        this._webSocket.onclose = function (closeEvent) {\n            _this.debug(\"Connection closed to \" + _this._webSocket.url);\n            _this.onWebSocketClose(closeEvent);\n            _this._cleanUp();\n        };\n        this._webSocket.onerror = function (errorEvent) {\n            _this.onWebSocketError(errorEvent);\n        };\n        this._webSocket.onopen = function () {\n            // Clone before updating\n            var connectHeaders = Object.assign({}, _this.connectHeaders);\n            _this.debug('Web Socket Opened...');\n            connectHeaders['accept-version'] = _this.stompVersions.supportedVersions();\n            connectHeaders['heart-beat'] = [_this.heartbeatOutgoing, _this.heartbeatIncoming].join(',');\n            _this._transmit({ command: 'CONNECT', headers: connectHeaders });\n        };\n    };\n    StompHandler.prototype._setupHeartbeat = function (headers) {\n        var _this = this;\n        if ((headers.version !== versions_1.Versions.V1_1 && headers.version !== versions_1.Versions.V1_2)) {\n            return;\n        }\n        // It is valid for the server to not send this header\n        // https://stomp.github.io/stomp-specification-1.2.html#Heart-beating\n        if (!headers['heart-beat']) {\n            return;\n        }\n        // heart-beat header received from the server looks like:\n        //\n        //     heart-beat: sx, sy\n        var _a = (headers['heart-beat']).split(',').map(function (v) { return parseInt(v, 10); }), serverOutgoing = _a[0], serverIncoming = _a[1];\n        if ((this.heartbeatOutgoing !== 0) && (serverIncoming !== 0)) {\n            var ttl = Math.max(this.heartbeatOutgoing, serverIncoming);\n            this.debug(\"send PING every \" + ttl + \"ms\");\n            this._pinger = setInterval(function () {\n                if (_this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                    _this._webSocket.send(byte_1.BYTE.LF);\n                    _this.debug('>>> PING');\n                }\n            }, ttl);\n        }\n        if ((this.heartbeatIncoming !== 0) && (serverOutgoing !== 0)) {\n            var ttl_1 = Math.max(this.heartbeatIncoming, serverOutgoing);\n            this.debug(\"check PONG every \" + ttl_1 + \"ms\");\n            this._ponger = setInterval(function () {\n                var delta = Date.now() - _this._lastServerActivityTS;\n                // We wait twice the TTL to be flexible on window's setInterval calls\n                if (delta > (ttl_1 * 2)) {\n                    _this.debug(\"did not receive server activity for the last \" + delta + \"ms\");\n                    _this._closeWebsocket();\n                }\n            }, ttl_1);\n        }\n    };\n    StompHandler.prototype._closeWebsocket = function () {\n        this._webSocket.onmessage = function () { }; // ignore messages\n        this._webSocket.close();\n    };\n    StompHandler.prototype._transmit = function (params) {\n        var command = params.command, headers = params.headers, body = params.body, binaryBody = params.binaryBody, skipContentLengthHeader = params.skipContentLengthHeader;\n        var frame = new frame_impl_1.FrameImpl({\n            command: command,\n            headers: headers,\n            body: body,\n            binaryBody: binaryBody,\n            escapeHeaderValues: this._escapeHeaderValues,\n            skipContentLengthHeader: skipContentLengthHeader\n        });\n        var rawChunk = frame.serialize();\n        if (this.logRawCommunication) {\n            this.debug(\">>> \" + rawChunk);\n        }\n        else {\n            this.debug(\">>> \" + frame);\n        }\n        if (this.forceBinaryWSFrames && typeof rawChunk === 'string') {\n            rawChunk = new TextEncoder().encode(rawChunk);\n        }\n        if (typeof rawChunk !== 'string' || !this.splitLargeFrames) {\n            this._webSocket.send(rawChunk);\n        }\n        else {\n            var out = rawChunk;\n            while (out.length > 0) {\n                var chunk = out.substring(0, this.maxWebSocketChunkSize);\n                out = out.substring(this.maxWebSocketChunkSize);\n                this._webSocket.send(chunk);\n                this.debug(\"chunk sent = \" + chunk.length + \", remaining = \" + out.length);\n            }\n        }\n    };\n    StompHandler.prototype.dispose = function () {\n        var _this = this;\n        if (this.connected) {\n            try {\n                // clone before updating\n                var disconnectHeaders = Object.assign({}, this.disconnectHeaders);\n                if (!disconnectHeaders.receipt) {\n                    disconnectHeaders.receipt = \"close-\" + this._counter++;\n                }\n                this.watchForReceipt(disconnectHeaders.receipt, function (frame) {\n                    _this._closeWebsocket();\n                    _this._cleanUp();\n                    _this.onDisconnect(frame);\n                });\n                this._transmit({ command: 'DISCONNECT', headers: disconnectHeaders });\n            }\n            catch (error) {\n                this.debug(\"Ignoring error during disconnect \" + error);\n            }\n        }\n        else {\n            if (this._webSocket.readyState === web_socket_state_1.WebSocketState.CONNECTING\n                || this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                this._closeWebsocket();\n            }\n        }\n    };\n    StompHandler.prototype._cleanUp = function () {\n        this._connected = false;\n        if (this._pinger) {\n            clearInterval(this._pinger);\n        }\n        if (this._ponger) {\n            clearInterval(this._ponger);\n        }\n    };\n    StompHandler.prototype.publish = function (params) {\n        var destination = params.destination, headers = params.headers, body = params.body, binaryBody = params.binaryBody, skipContentLengthHeader = params.skipContentLengthHeader;\n        var hdrs = Object.assign({ destination: destination }, headers);\n        this._transmit({\n            command: 'SEND',\n            headers: hdrs,\n            body: body,\n            binaryBody: binaryBody,\n            skipContentLengthHeader: skipContentLengthHeader\n        });\n    };\n    StompHandler.prototype.watchForReceipt = function (receiptId, callback) {\n        this._receiptWatchers[receiptId] = callback;\n    };\n    StompHandler.prototype.subscribe = function (destination, callback, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        if (!headers.id) {\n            headers.id = \"sub-\" + this._counter++;\n        }\n        headers.destination = destination;\n        this._subscriptions[headers.id] = callback;\n        this._transmit({ command: 'SUBSCRIBE', headers: headers });\n        var client = this;\n        return {\n            id: headers.id,\n            unsubscribe: function (hdrs) {\n                return client.unsubscribe(headers.id, hdrs);\n            }\n        };\n    };\n    StompHandler.prototype.unsubscribe = function (id, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        delete this._subscriptions[id];\n        headers.id = id;\n        this._transmit({ command: 'UNSUBSCRIBE', headers: headers });\n    };\n    StompHandler.prototype.begin = function (transactionId) {\n        var txId = transactionId || (\"tx-\" + this._counter++);\n        this._transmit({\n            command: 'BEGIN', headers: {\n                transaction: txId\n            }\n        });\n        var client = this;\n        return {\n            id: txId,\n            commit: function () {\n                client.commit(txId);\n            },\n            abort: function () {\n                client.abort(txId);\n            }\n        };\n    };\n    StompHandler.prototype.commit = function (transactionId) {\n        this._transmit({\n            command: 'COMMIT', headers: {\n                transaction: transactionId\n            }\n        });\n    };\n    StompHandler.prototype.abort = function (transactionId) {\n        this._transmit({\n            command: 'ABORT', headers: {\n                transaction: transactionId\n            }\n        });\n    };\n    StompHandler.prototype.ack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        if (this._connectedVersion === versions_1.Versions.V1_2) {\n            headers.id = messageId;\n        }\n        else {\n            headers['message-id'] = messageId;\n        }\n        headers.subscription = subscriptionId;\n        this._transmit({ command: 'ACK', headers: headers });\n    };\n    StompHandler.prototype.nack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        if (this._connectedVersion === versions_1.Versions.V1_2) {\n            headers.id = messageId;\n        }\n        else {\n            headers['message-id'] = messageId;\n        }\n        headers.subscription = subscriptionId;\n        return this._transmit({ command: 'NACK', headers: headers });\n    };\n    return StompHandler;\n}());\nexports.StompHandler = StompHandler;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-headers.ts\":\n/*!******************************!*\\\n  !*** ./src/stomp-headers.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * STOMP headers. Many functions calls will accept headers as parameters.\n * The headers sent by Broker will be available as [IFrame#headers]{@link IFrame#headers}.\n *\n * `key` and `value` must be valid strings.\n * In addition, `key` must not contain `CR`, `LF`, or `:`.\n *\n * Part of `@stomp/stompjs`.\n */\nvar StompHeaders = /** @class */ (function () {\n    function StompHeaders() {\n    }\n    return StompHeaders;\n}());\nexports.StompHeaders = StompHeaders;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-subscription.ts\":\n/*!***********************************!*\\\n  !*** ./src/stomp-subscription.ts ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nvar StompSubscription = /** @class */ (function () {\n    function StompSubscription() {\n    }\n    return StompSubscription;\n}());\nexports.StompSubscription = StompSubscription;\n\n\n/***/ }),\n\n/***/ \"./src/versions.ts\":\n/*!*************************!*\\\n  !*** ./src/versions.ts ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Supported STOMP versions\n *\n * Part of `@stomp/stompjs`.\n */\nvar Versions = /** @class */ (function () {\n    /**\n     * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n     *\n     * You will an instance if this class if you want to override supported versions to be declared during\n     * STOMP handshake.\n     */\n    function Versions(versions) {\n        this.versions = versions;\n    }\n    /**\n     * Used as part of CONNECT STOMP Frame\n     */\n    Versions.prototype.supportedVersions = function () {\n        return this.versions.join(',');\n    };\n    /**\n     * Used while creating a WebSocket\n     */\n    Versions.prototype.protocolVersions = function () {\n        return this.versions.map(function (x) { return \"v\" + x.replace('.', '') + \".stomp\"; });\n    };\n    /**\n     * Indicates protocol version 1.0\n     */\n    Versions.V1_0 = '1.0';\n    /**\n     * Indicates protocol version 1.1\n     */\n    Versions.V1_1 = '1.1';\n    /**\n     * Indicates protocol version 1.2\n     */\n    Versions.V1_2 = '1.2';\n    /**\n     * @internal\n     */\n    Versions.default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n    return Versions;\n}());\nexports.Versions = Versions;\n\n\n/***/ }),\n\n/***/ \"./src/web-socket-state.ts\":\n/*!*********************************!*\\\n  !*** ./src/web-socket-state.ts ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Possible states for the WebSocket, copied here to avoid dependency on WebSocket class\n *\n * Part of `@stomp/rx-stomp`\n *\n * @internal\n */\nvar WebSocketState;\n(function (WebSocketState) {\n    WebSocketState[WebSocketState[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    WebSocketState[WebSocketState[\"OPEN\"] = 1] = \"OPEN\";\n    WebSocketState[WebSocketState[\"CLOSING\"] = 2] = \"CLOSING\";\n    WebSocketState[WebSocketState[\"CLOSED\"] = 3] = \"CLOSED\";\n})(WebSocketState = exports.WebSocketState || (exports.WebSocketState = {}));\n\n\n/***/ }),\n\n/***/ 0:\n/*!****************************!*\\\n  !*** multi ./src/index.ts ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(/*! /home/kdeepak/MyWork/Tech/stomp/stompjs/src/index.ts */\"./src/index.ts\");\n\n\n/***/ })\n\n/******/ });\n});\n"],
  "mappings": "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",
  "names": ["module", "exports", "key", "Client", "d", "b", "CompatClient", "HeartbeatInfo", "Stomp", "FrameImpl", "Parser", "StompConfig", "StompHandler", "StompHeaders", "StompSubscription", "Versions", "WebSocketState"]
}
